apiVersion: apps/v1
kind: Deployment
metadata:
  name: sharelatex
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sharelatex
  template:
    metadata:
      labels:
        app: sharelatex
    spec:
      securityContext:
        fsGroup: 65534
        runAsUser: 0
        runAsGroup: 0
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      initContainers:
        - name: init-texlive-copy
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              IMG_VER_FILE="/usr/local/texlive/2025/.tlmgr-image-checksum"
              PERSIST_VER_FILE="/mnt/texlive/2025/.tlmgr-image-checksum"

              if ! cmp -s "$IMG_VER_FILE" "$PERSIST_VER_FILE"; then
                echo "Image TeX Live version changed — syncing to persistent volume..."
                rsync -a --delete /usr/local/texlive/ /mnt/texlive/
              else
                echo "TeX Live up to date in volume — skipping copy"
              fi
          volumeMounts:
            - name: texlive-root
              mountPath: /mnt/texlive
        - name: install-textlive
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/bin/sh", "-c", "ls /etc/texlive-packages/ ; cat /etc/texlive-packages/packages.txt ; tlmgr update --self && xargs -a /etc/texlive-packages/packages.txt tlmgr install"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: texlive-packages
              mountPath: /etc/texlive-packages/packages.txt
              subPath: packages
              readOnly: true
            - name: texlive-root
              mountPath: /usr/local/texlive
      containers:
        - name: overleaf
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"          
          ports:
            - containerPort: 80
          env:
            - name: GIT_BRIDGE_ENABLED
              value: {{ .Values.overleaf.gitBridge.enabled | quote }}
            - name: GIT_BRIDGE_HOST
              value: {{ .Values.overleaf.gitBridge.host }}
            - name: GIT_BRIDGE_PORT
              value: {{ .Values.overleaf.gitBridge.port | quote }}
            - name: V1_HISTORY_URL
              value: {{ .Values.overleaf.v1HistoryUrl }}
            - name: OVERLEAF_APP_NAME
              value: {{ .Values.overleaf.appName }}
            - name: OVERLEAF_MONGO_URL
              {{- if .Values.mongo.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.existingSecret }}
                  key: {{ .Values.mongo.existingSecretKey }}
              {{- else }}
              value: {{ .Values.mongo.url | quote }}
              {{- end }}
            - name: OVERLEAF_REDIS_HOST
              value: {{ .Values.redis.host | quote }}
            - name: REDIS_HOST
              value: {{ .Values.redis.host | quote }}
            - name: REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            {{- if and .Values.redis.password.existingSecret .Values.redis.password.existingSecretKey }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.password.existingSecret }}
                  key: {{ .Values.redis.password.existingSecretKey | default "host" }}
            {{- end }}
            {{- if and .Values.redis.password.existingSecret .Values.redis.password.existingSecretKey }}
            - name: OVERLEAF_REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.password.existingSecret }}
                  key: {{ .Values.redis.password.existingSecretKey | default "host" }}
            {{- end }}
            - name: EXTERNAL_AUTH
              value: "none"
            - name: ENABLE_LINKED_FILE_TYPES
              value: "project_file,project_output_file"
            - name: ENABLE_CONVERSIONS
              value: "true"
            - name: EMAIL_CONFIRMATION_DISABLED
              value: "false"
          volumeMounts:
            - name: overleaf-data
              mountPath: /var/lib/overleaf
            - name: texlive-root
              mountPath: /usr/local/texlive
      volumes:
        - name: overleaf-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.data.name }}
        - name: texlive-packages
          configMap:
            name: texlive-packages
        - name: texlive-root
          {{- if .Values.persistence.texlive.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.texlive.name }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
