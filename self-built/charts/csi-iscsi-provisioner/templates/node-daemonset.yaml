apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "csi-provisioner.fullname" . }}-node
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: node
    {{- include "csi-provisioner.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: node
      {{- include "csi-provisioner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: node
        {{- include "csi-provisioner.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "csi-provisioner.nodeServiceAccountName" . }}
      {{- with .Values.nodePlugin.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: liveness-probe
          image: "{{ .Values.nodePlugin.sidecar.livenessProbe.image.repository }}:{{ .Values.nodePlugin.sidecar.livenessProbe.image.tag }}"
          imagePullPolicy: {{ .Values.nodePlugin.image.pullPolicy }}
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=29753
            - --v=2
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: node-driver-registrar
          image: "{{ .Values.nodePlugin.sidecar.registrar.image.repository }}:{{ .Values.nodePlugin.sidecar.registrar.image.tag }}"
          imagePullPolicy: {{ .Values.nodePlugin.image.pullPolicy }}
          securityContext:
            privileged: true
          args:
            - "--v=5"
            - "--csi-address=/csi/csi.sock"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/{{ .Values.storageClass.provisioner }}/csi.sock"
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: iscsi-plugin
          image: "{{ .Values.nodePlugin.image.repository }}:{{ .Values.nodePlugin.image.tag }}"
          imagePullPolicy: {{ .Values.nodePlugin.image.pullPolicy }}
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(NODE_ID)"
            - "--v=5"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          ports:
            - containerPort: 29753
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: host-dev
              mountPath: /dev
            - name: host-root
              mountPath: /host
              mountPropagation: "HostToContainer"
            - name: chroot-iscsiadm
              mountPath: /sbin/iscsiadm
              subPath: iscsiadm
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/{{ .Values.storageClass.provisioner }}
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
        - name: host-dev
          hostPath:
            path: /dev
        - name: host-root
          hostPath:
            path: /
            type: Directory
        - name: chroot-iscsiadm
          configMap:
            defaultMode: 0755
            name: {{ include "csi-provisioner.fullname" . }}-iscsiadm-cm
